name: YDB tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '18 4 * * *'

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: 1.56.0

jobs:
  tests:
    runs-on: ubuntu-20.04
    services:
      ydb:
        image: cr.yandex/yc/yandex-docker-local-ydb:latest
        ports:
          - 2136:2136
        env:
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost'

    steps:
    - name: Install fixed rust version
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: ${{env.RUST_VERSION}}

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Cache
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-${{env.RUST_VERSION}}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{env.RUST_VERSION}}-cargo-
        path: |
          ~/.cargo/bin/
          ~/.cargo/.crates.toml
          ~/.cargo/.crates2.json
          ~/.cargo/.package-cache
          ~/.cargo/registry/
          ~/.cargo/git/db/
          target/

    - name: Rust check versions
      run: |
        cargo version
        rustc --version

    - name: Build
      run: cargo build --verbose --workspace

    - name: Wait database available
      run: bash ./.github/scripts/wait-ydb-container.sh

    - name: Run tests
      env:
        YDB_CONNECTION_STRING: grpc://localhost:2136?database=/local
      run: cargo test --verbose --workspace -- --include-ignored --nocapture
